name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: t2foundation-website
  REGION: asia-south2
  DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} .
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}

    - name: Deploy to Cloud Run
      id: deploy
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated
        
        # Get the Cloud Run URL
        URL=$(gcloud run services describe $SERVICE_NAME --region $REGION --format 'value(status.url)')
        echo "::set-output name=url::$URL"
        
        # Extract the IP address needed for DNS mapping
        IP_ADDRESS=$(gcloud run domain-mappings describe --service=$SERVICE_NAME --region=$REGION --format='value(status.resourceRecords[0].rrdata)' 2>/dev/null || echo "")
        
        if [ -z "$IP_ADDRESS" ]; then
          # If no mapping exists yet, create it
          echo "Creating domain mapping..."
          gcloud beta run domain-mappings create \
            --service $SERVICE_NAME \
            --domain $DOMAIN_NAME \
            --region $REGION
            
          # Now get the IP address
          IP_ADDRESS=$(gcloud run domain-mappings describe --service=$SERVICE_NAME --domain=$DOMAIN_NAME --region=$REGION --format='value(status.resourceRecords[0].rrdata)')
        fi
        
        echo "IP_ADDRESS=$IP_ADDRESS" >> $GITHUB_ENV

    - name: Update DNS Records
      run: |
        if ! gcloud dns managed-zones list --filter="name=t2foundation" | grep t2foundation; then
          gcloud dns managed-zones create t2foundation --dns-name=$DOMAIN_NAME. --description="DNS zone for $DOMAIN_NAME"
        fi
        
        gcloud dns record-sets transaction start --zone=t2foundation
        
        # Check if the A record exists
        if gcloud dns record-sets list --zone=t2foundation --name="$DOMAIN_NAME." --type=A | grep "$DOMAIN_NAME."; then
          # Update the existing A record
          gcloud dns record-sets transaction remove --zone=t2foundation --name="$DOMAIN_NAME." --type=A --ttl=300 "$(gcloud dns record-sets list --zone=t2foundation --name="$DOMAIN_NAME." --type=A --format='value(rrdatas)')"
        fi
        
        # Add the new A record
        gcloud dns record-sets transaction add --zone=t2foundation --name="$DOMAIN_NAME." --type=A --ttl=300 "${{ env.IP_ADDRESS }}"
        
        # Check if the CNAME record exists for www
        if gcloud dns record-sets list --zone=t2foundation --name="www.$DOMAIN_NAME." --type=CNAME | grep "www.$DOMAIN_NAME."; then
          # Update the existing CNAME record
          gcloud dns record-sets transaction remove --zone=t2foundation --name="www.$DOMAIN_NAME." --type=CNAME --ttl=300 "$(gcloud dns record-sets list --zone=t2foundation --name="www.$DOMAIN_NAME." --type=CNAME --format='value(rrdatas)')"
        fi
        
        # Add the new CNAME record
        gcloud dns record-sets transaction add --zone=t2foundation --name="www.$DOMAIN_NAME." --type=CNAME --ttl=300 "$DOMAIN_NAME."
        
        # Execute the transaction
        gcloud dns record-sets transaction execute --zone=t2foundation
        
    - name: Output Deployment Info
      run: |
        echo "Deployed to Cloud Run at: ${{ steps.deploy.outputs.url }}"
        echo "Custom domain: https://$DOMAIN_NAME"
        echo "Remember that DNS changes may take up to 24-48 hours to fully propagate."